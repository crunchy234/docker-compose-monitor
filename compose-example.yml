services:
  psql_healthy:  # Container that will always pass health check
    image: postgres:16
    restart: always
    environment:
      PGUSER: myuser
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: mydb_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser"]  # Use pg_isready to check PostgreSQL
      interval: 10s
      timeout: 5s
      retries: 3
    secrets:
      - db_password

  psql_unhealthy:  # Container that will always fail health check
    image: postgres:16
    restart: always
    environment:
      PGUSER: myuser
      POSTGRES_USER: myuser
      # Note: This should be a different password to the above container but ¯\_(ツ)_/¯
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: mydb_bad_health
    healthcheck:
      test: ["CMD", "false"]  # The "false" command always returns a non-zero exit code
      interval: 1s
      timeout: 5s
      retries: 10
    secrets:
      - db_password

  crashing_container:
    image: alpine
    command: sh -c 'sleep 5 && echo "I will crash now!" && exit 1'

  graceful_exit_container:
    image: alpine
    command: sh -c 'echo "Exiting gracefully..." && sleep 5 && exit 0'

secrets:
  db_password:
    file: ./.local-pg-password.txt